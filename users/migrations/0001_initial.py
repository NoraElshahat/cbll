# Generated by Django 3.1.5 on 2021-03-01 09:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [("auth", "0012_alter_user_first_name_max_length")]

    operations = [
        migrations.CreateModel(
            name="CblUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={"invalid": "Cannot email be empty"},
                        help_text="enter a valid user mail",
                        max_length=250,
                        unique=True,
                        verbose_name="user email",
                    ),
                ),
                (
                    "first",
                    models.CharField(
                        help_text="enter a valid first name",
                        max_length=250,
                        verbose_name="first name",
                    ),
                ),
                (
                    "last",
                    models.CharField(
                        help_text="enter a valid last name",
                        max_length=250,
                        verbose_name="last name",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="enter a valid phone number",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        default="male",
                        help_text="select a gender",
                        max_length=6,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        choices=[
                            ("egypt", "EGYPT"),
                            ("usa", "USA"),
                            ("germany", "Germany"),
                        ],
                        help_text="select a country",
                        max_length=100,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, help_text="enter a valid address", max_length=200
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_super_admin", models.BooleanField(default=False)),
                ("token", models.CharField(blank=True, max_length=300)),
                ("hu_id", models.CharField(blank=True, max_length=30)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"abstract": False},
        )
    ]
